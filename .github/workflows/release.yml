name: Build release binaries

on:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - uses: actions/checkout@master
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libx11-dev libgtk-3-dev
          sudo apt install libasound2-dev
          sudo apt install libudev-dev
      - if: matrix.os == 'macos-latest'
        run: |
          brew install cairo
      - name: Build
        run: |
          cargo build --release
          mkdir artifacts
      - if: matrix.os == 'windows-latest'
        run: |
          mv target/release/revgame.exe speeed-${{ github.event.release.tag_name }}_win64.exe
      - if: matrix.os == 'ubuntu-latest'
        run: |
          mv target/release/revgame speeed-${{ github.event.release.tag_name }}_linux
      - if: matrix.os == 'macos-latest'
        run: |
          mv target/release/revgame speeed-${{ github.event.release.tag_name }}_macos

      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "artifacts/*"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
